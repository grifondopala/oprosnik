Index: TestSite/tests/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db.models import Count\r\nfrom django.http import HttpResponse\r\nfrom django.shortcuts import render\r\nfrom django.shortcuts import redirect\r\n\r\nfrom .forms import *\r\nfrom .models import *\r\n\r\ndef authorization(request):\r\n    if request.method == 'POST':\r\n        form = AuthorizationForm(request.POST)\r\n        if form.is_valid():\r\n            login = form.cleaned_data['login']\r\n            password = form.cleaned_data['password']\r\n            find_user = User.objects.filter(login=login, password=password)\r\n            if (find_user.count() == 1):\r\n                print(\"успешно\")\r\n                response = redirect('main')\r\n                response.set_cookie('login', login, )\r\n                return response\r\n            else:\r\n                print(\" в попытках постигнуть великое люди гибнут на пути...\")\r\n    else:\r\n        form = AuthorizationForm()\r\n    return render(request, 'tests/authorization.html', {'form': form})\r\n\r\ndef main(request):\r\n    print(request.COOKIES.get('login'))\r\n    return render(request, 'tests/main.html')\r\n\r\ndef registration(request):\r\n    if request.method == 'POST':\r\n        form = RegistrationForm(request.POST)\r\n        if form.is_valid():\r\n            login = form.cleaned_data['login']\r\n            password = form.cleaned_data['password']\r\n            email = form.cleaned_data['email']\r\n            fn = form.cleaned_data['first_name']\r\n            ln = form.cleaned_data['last_name']\r\n            find_user = User.objects.filter(login=login)\r\n            if find_user.count() !=0:\r\n                print('Пользователь с таким логином уже существует')\r\n            else:\r\n                find_user = User.objects.filter(email = email)\r\n                if find_user.count() !=0:\r\n                    print('Пользователь с такой почтой уже существует')\r\n                else:\r\n                    User(login = login, password = password, email = email, first_name = fn, last_name = ln).save()\r\n\r\n    else:\r\n        form = RegistrationForm()\r\n    return render(request, 'tests/registration.html', {'form': form})\r\n\r\ndef creation(request):\r\n    if request.method == 'POST':\r\n        pass\r\n    else:\r\n        print(request.COOKIES.get('login'))\r\n        pass\r\n    return render(request, 'tests/creation.html')\r\n\r\ndef profile(request):\r\n    login = request.COOKIES.get('login')\r\n    current_user = User.objects.filter(login = login)[0]\r\n    return render(request, 'tests/profile.html', {'login': login, 'first_name': current_user.first_name, 'last_name' : current_user.last_name})\r\n\r\ndef change_password(request):\r\n    return render(request, 'tests/change_password.html')\r\ndef my_tests(request):\r\n    return render(request, 'tests/my_tests.html')\r\ndef performed_tests(request):\r\n    return render(request, 'tests/performed_tests.html')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TestSite/tests/views.py b/TestSite/tests/views.py
--- a/TestSite/tests/views.py	(revision 4b56b5f892ba19bf9ac1550899fff643c7e6c9e3)
+++ b/TestSite/tests/views.py	(date 1644767614511)
@@ -65,8 +65,23 @@
     return render(request, 'tests/profile.html', {'login': login, 'first_name': current_user.first_name, 'last_name' : current_user.last_name})
 
 def change_password(request):
-    return render(request, 'tests/change_password.html')
+    if request.method == 'POST':
+        form = PasswordChangeForm(request.POST)
+        if form.is_valid():
+            login = request.COOKIES.get('login')
+            password = form.cleaned_data['password']
+            find_user = User.objects.filter(login=login, password=password)
+            if (find_user.count() == 1):
+                response = render (request, 'tests/change_password2.html')
+                return response
+            else:
+                return render(request,'tests/invalid_data.html' )
+    else:
+        form = PasswordChangeForm()
+    return render(request, 'tests/change_password1.html', {'form': form})
+
 def my_tests(request):
     return render(request, 'tests/my_tests.html')
+
 def performed_tests(request):
     return render(request, 'tests/performed_tests.html')
